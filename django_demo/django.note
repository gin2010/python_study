Django笔记
1.创建一个项目test1
	django-admin startproject test1
	目录结构：
	settings.py  项目的配置文件
	urls.py  url路由配置
	wsgi.py  web?服务器与django框架交互的入口
	manage.py  项目应用管理文件
2.创建应用：python manage.py startapp booktest
	目录结构：
	models.py  数据库相关的内容
	tests.py  写测试代码的文件
	views.py  接收请求并处理
	admin.py  网站的后台管理相关的文件
3.setting.py 配置文件
	INSTALLED_APPS 添加 booktest # 对应用进行注册
	TIME_ZONE = 'Asia/Shanghai'  # 修改时间为中国上海(没有北京)
	TEMPLATES中的dirs值  # 配置模板目录
4生成数据库表结构(orm框架)
	在model.py自定义一个类继承models.Model，并增加数据库表名
	生成迁移文件：python manage.py makemigrations
	生成数据库表：python manage.py migrate   (默认使用sqllite数据库，id会自动添加)
5.进入django终端：python manage.py shell
6.models里的表操作
	属性名不能使用双下划线(会跟查询冲突)
	b=BookInfo() # 创建数据库表对象
	b.btitle="天龙八部" # 赋值
	b.save() # 插入或修改后保存到数据库表中
	h=HeroInfo()
	h.hbook=b # 外键关联此时b这笔数据
	h2 =HeroInfo.objects.get(id=1) # 查询id为1的数据
	b.heroinfo_set.all() # 查询BookInfo中b这笔数据对应HeroInfo中外键数据
	HeroInfo.objects.all() # 查询HeroInfo表中所有数据
	default与blank 不影响表结构，无需做数据迁移

7.admin.py 管理数据库表
	python manage.py createsuperuser 创建管理员(http://127.0.0.1:8000/admin/)
	list_display  可以控制后台表查询时显示哪些字段
8.urls.py 配置url与视图的关系(具体的处理这个url的函数)
	url(r'^index/*$',include('booktest.urls'))   #所有index开头的交给booktest APP下面的urls.py来处理
9.template里的参数传递
	传入变量：{{ attrs}}
	使用for循环：{% for attr in attrs %}
					{{ attr }}
				{% empty %}

				{% endfor %}

10.